
// This file is automatically generated. Do not edit it directly.
import { createClient } from '@supabase/supabase-js';
import type { Database } from './types';

const SUPABASE_URL = "https://akhpkrrirtjclblcuhmj.supabase.co";
const SUPABASE_PUBLISHABLE_KEY = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImFraHBrcnJpcnRqY2xibGN1aG1qIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDMyMzEyMTgsImV4cCI6MjA1ODgwNzIxOH0.RKMcX-CsQDJVpFPdHj0rFGeVj7k8nRWFlSJuPGXYKAM";

// Import the supabase client like this:
// import { supabase } from "@/integrations/supabase/client";

export const supabase = createClient<Database>(SUPABASE_URL, SUPABASE_PUBLISHABLE_KEY);

// Helper function to check if Supabase is connected
export const isSupabaseConnected = async (): Promise<boolean> => {
  try {
    // Instead of querying a non-existent table, let's try a simpler approach
    // We'll check if we can connect to Supabase at all
    const { error } = await supabase.auth.getSession();
    
    // If there's a network error, it means we're not connected
    return !error;
  } catch (error) {
    console.error("Supabase connection check failed:", error);
    return false;
  }
};
